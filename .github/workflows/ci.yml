name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main, staging, trying ]
  pull_request:
    branches: [ main ]

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
  check:
    name: Rust Check - ${{ matrix.check }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        rust-target: [x86_64-unknown-linux-gnu]
        check: [test, check, fmt, clippy]
    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
      TARGET: ${{ matrix.rust-target }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Cargo test
        if: ${{ matrix.check == 'test' }}
        run: |
          cargo test

      - name: Cargo check
        if: ${{ matrix.check == 'check' }}
        run: |
          cargo check --all-targets

      - name: Cargo fmt
        if: ${{ matrix.check == 'fmt' }}
        run: cargo fmt -- --check

      - name: Cargo clippy
        if: ${{ matrix.check == 'clippy' }}
        run: cargo clippy -- -D warnings

  build_containers:
    name: Build containers 
    fail-fast: false
    #needs: check_fmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust-target:
          - x86_64-unknown-linux-musl
          #- aarch64-unknown-linux-musl
        rust: [stable]
    env:
      RUSTV: ${{ matrix.rust }}
      TARGET: ${{ matrix.rust-target }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }} 
          override: true
          target: ${{ matrix.rust-target }}
      - name: Install system toolchain - x86_64-unknown-linux-musl'
        if: ${{ matrix.rust-target == 'x86_64-unknown-linux-musl' }}
        run: |
          apt update
          apt install -y musl-tools

      #- name: Install system toolchain - aarch64-unknown-linux-musl
      #  if: ${{ matrix.rust-target == 'aarch64-unknown-linux-musl' }}
      #  run: |
      #    apt update
      #    apt install -y gcc-aarch64-linux-gnu 

      - name: Build containers
        run: make RELEASE=true official-containers
      # TODO: Create docker manifest

  # Job that follows the success of all required jobs in this workflow.
  # Used by Bors to detect that all required jobs have completed successfully
  done:
    name: Done
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    needs: [check_fmt]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo "Done!"